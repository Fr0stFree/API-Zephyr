[tool.poetry]
name = "async-python-sprint-5"
version = "0.1.0"
description = ""
authors = ["fr0stfree <me@frostfree.ru>"]
readme = "README.md"
packages = [{include = "async_python_sprint_5"}]

[tool.poetry.dependencies]
python = "^3.11"
alembic = "^1.10.2"
sqlalchemy = "^2.0.7"
fastapi = "^0.95.0"
pydantic = "^1.10.7"
uvicorn = "^0.21.1"
asyncpg = "^0.27.0"
python-dotenv = "^1.0.0"
python-jose = "^3.3.0"
bcrypt = "^4.0.1"
passlib = "^1.7.4"
python-multipart = "^0.0.6"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
pytest-asyncio = "^0.21.0"
httpx = "^0.23.3"
ruff = "^0.0.260"
pytest-env = "^0.8.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = "./src"
addopts = "--cache-clear"
cache_dir = "./tests/.pytest_cache"
asyncio_mode = "auto"
filterwarnings = "ignore::DeprecationWarning"
env = [
    "TEST_DB_NAME = test_db",
    "TEST_DB_USER = test_user",
    "TEST_DB_PASSWORD = test_password"
]

[tool.ruff]
select = ["E", "F", "RUF", "PL", "SIM", "ARG", "UP", "N"]
ignore = []
fixable = []
cache-dir = "./tests/.ruff_cache"
unfixable = []
line-length = 120
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py311"
exclude = [".git", "*cache*", "alembic", "__init__.py"]
